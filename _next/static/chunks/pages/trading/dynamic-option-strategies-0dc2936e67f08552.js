!(function () {
  try {
    var e =
        "undefined" != typeof window
          ? window
          : "undefined" != typeof global
          ? global
          : "undefined" != typeof self
          ? self
          : {},
      t = new e.Error().stack;
    t &&
      ((e._sentryDebugIds = e._sentryDebugIds || {}),
      (e._sentryDebugIds[t] = "e90a9ba1-cd80-48dc-9212-5348fbcd5726"),
      (e._sentryDebugIdIdentifier =
        "sentry-dbid-e90a9ba1-cd80-48dc-9212-5348fbcd5726"));
  } catch (e) {}
})(),
  (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [1601],
    {
      42755: function (e, t, i) {
        (window.__NEXT_P = window.__NEXT_P || []).push([
          "/trading/dynamic-option-strategies",
          function () {
            return i(78835);
          },
        ]);
      },
      46574: function (e, t, i) {
        "use strict";
        i.d(t, {
          Z: function () {
            return z;
          },
        });
        var r = i(85893),
          a = i(67294),
          s = i(39332),
          n = i(27484),
          o = i.n(n),
          l = i(23279),
          c = i.n(l),
          d = i(59731),
          p = i(1646),
          u = i.n(p),
          C = i(45338),
          m = i(59085),
          g = i(15418),
          x = i(15922),
          y = i(18666),
          f = i(93967),
          h = i.n(f),
          w = i(77125),
          v = i(108),
          _ = i(5716),
          j = i(45323),
          b = i(75922),
          k = i(52431),
          S = i(37422),
          N = i(69737),
          L = i(13880),
          Z = i(24514),
          P = i(10694),
          F = i.n(P),
          V = i(38291);
        let H = [
            { option: "Option", value: "option" },
            { option: "Digital", value: "digital-option" },
            { option: "Forward", value: "Forward" },
          ],
          E = {
            option: [
              { option: "Call", value: "Call" },
              { option: "Put", value: "Put" },
            ],
            "digital-option": [
              { option: "Call", value: "BinaryCall" },
              { option: "Put", value: "BinaryPut" },
            ],
            Forward: [
              { option: "Next Auction", value: "NEXT_AUCTION" },
              { option: "Call", value: "CURRENT" },
            ],
          },
          M = (e) => ({
            option: [
              { option: "Call", value: "Call" },
              { option: "Put", value: "Put" },
            ],
            "digital-option": [
              { option: "Call", value: "BinaryCall" },
              { option: "Put", value: "BinaryPut" },
            ],
            Forward: [
              { option: "Next Auction", value: "NEXT_AUCTION" },
              { option: (0, y.p6)(e.toString(), y.Nn, y.KJ), value: "CURRENT" },
            ],
          });
        var O = i(67930),
          I = i(70757);
        o().extend(u());
        var z = (e) => {
          let {
              updateStrategy: t,
              strategy: i,
              id: n,
              removeStrategy: o,
              linkChange: l,
              linked: p,
              netPrice: u,
              isExpiryLinked: f,
              limitedExpiries: P,
            } = e,
            {
              underlyingCurrency: z,
              currentCurrencyPair: D,
              spotPrices: B,
              currentExpiryDate: T,
              spotContract: R,
              expiryList: U,
              getContractsByExpiry: Y,
            } = (0, d.qr)(),
            W = ((null == P ? void 0 : P.length) > 1 ? P : U).map((e) => ({
              name: (0, y.lV)(e.toString()),
              value: e.toString(),
            })),
            A = (0, s.useSearchParams)(),
            [G, q] = (0, a.useState)(i.product),
            [X, K] = (0, a.useState)(E[i.product]),
            [Q, J] = (0, a.useState)(i.payoff),
            [$, ee] = (0, a.useState)(i.side),
            [et, ei] = (0, a.useState)(i.size.toString()),
            er = "Forward" === G,
            [ea, es] = (0, a.useState)(er ? "-" : void 0),
            en =
              i.expiry && U.includes(Number(i.expiry))
                ? i.expiry
                : T.toString(),
            [eo, el] = (0, a.useState)(en),
            ec = Y(eo, "Forward" === i.product ? "Forward" : i.payoff),
            [ed, ep] = (0, a.useState)(ec),
            [eu, eC] = (0, a.useState)(""),
            [em, eg] = (0, a.useState)(() => A.get(O.M0)),
            ex = (0, x.F)(),
            {
              unitPrice: ey,
              isLoading: ef,
              isFetching: eh,
            } = (0, m.k)({
              isForward: er,
              optionType: Q,
              expiryDate: Number(eo),
              strike: ea,
              side: $,
              currency: z,
            }),
            { iv: ew } = (0, V.d)({
              unitPrice: eu,
              strike: ea,
              isCall: "Call" === Q,
              side: $,
              expiry: Number(eo),
            }),
            ev = c()(
              () => {
                eg(null);
              },
              1e3,
              { trailing: !0 }
            );
          (0, a.useEffect)(() => {
            let e = Number(em),
              t = Number(ey);
            !eh &&
              !ef &&
              e &&
              u &&
              t &&
              (eC(Math.abs((e / u) * t).toFixed(4)), ev());
          }, [em, ey, eh, ef, u]),
            (0, a.useEffect)(() => {
              eC(ey);
            }, [ey]),
            (0, a.useEffect)(() => {
              eC((0, C.Dg)(i.referencePrice.toString()));
            }, [i.referencePrice]),
            (0, a.useEffect)(() => {
              if (
                !ea ||
                (0, C.E5)((0, C.Dx)(et)) ||
                (er && "-" !== ea) ||
                (!er && "-" === ea)
              )
                return;
              let e = Y(eo, er ? "Forward" : Q);
              t({
                ...i,
                side: $,
                contractId:
                  "NEXT_AUCTION" === Q ? R.contractId : e[ea].contractId,
                size: (0, C.Dx)(et),
                referencePrice: (0, C.Dx)(eu),
                calcServerFinalPrice: (0, C.Dx)(ey),
                payoff: Q,
                strike: ea,
                product: G,
                expiry: eo,
              });
            }, [G, Q, ea, T, ey, eu, et, $, eo]),
            (0, a.useEffect)(() => {
              ej();
            }, [ed, n]),
            (0, a.useEffect)(() => {
              ee(i.side);
            }, [i.side]),
            (0, a.useEffect)(() => {
              J(i.payoff);
            }, [i.payoff]),
            (0, a.useEffect)(() => {
              i.expiry && U.includes(Number(i.expiry)) && el(i.expiry);
            }, [i.expiry]),
            (0, a.useEffect)(() => {
              e_(i.product, i.payoff);
            }, [i.product]),
            (0, a.useEffect)(() => {
              eb(i.size.toString());
            }, [i.size]);
          let e_ = (e, t) => {
              let i = M(Number(eo));
              q(e),
                K(i[e]),
                J(t || i[e][0].value),
                ep({
                  ...Y(eo, "Forward" === e ? "Forward" : t || i[e][0].value),
                });
            },
            ej = () => {
              if ("Forward" === G) es("-");
              else {
                let e = B[D],
                  t = Object.keys(ed),
                  r = t.sort(
                    (t, i) =>
                      Math.abs(e - parseFloat(t)) - Math.abs(e - parseFloat(i))
                  )[0],
                  a = t.sort().findIndex((e) => e === r) + i.strikeIndex,
                  s = t[a < 0 ? 0 : a >= t.length ? t.length - 1 : a];
                es(t.find((e) => e === i.strike) || s);
              }
            },
            eb = (e) => {
              ei((0, C.Dg)(e));
            },
            ek = (e) => {
              es(e);
            },
            eS = (e) => {
              el(e), K(M(Number(e))[G]);
            };
          return (0, r.jsx)(r.Fragment, {
            children: (0, r.jsx)(L.Z, {
              margin: "br-20 mb-14 mt-10",
              className: "tw-p-4 lg:tw-p-2",
              children: (0, r.jsxs)("div", {
                className: F().parent,
                children: [
                  (0, r.jsxs)("div", {
                    className: F().title,
                    "data-is-expiry-linked": f,
                    children: [
                      "desktop" !== ex &&
                        (0, r.jsxs)(Z.Z, {
                          direction: "row-space-between-start",
                          children: [
                            (0, r.jsx)("p", {
                              className: F().subtitle,
                              children: "Product",
                            }),
                            (0, r.jsx)("div", {
                              className: F().removeButton,
                              children: (0, r.jsx)(S.Z, {
                                title: "Click to remove row",
                                variant: "icon",
                                onClick: o,
                                children: (0, r.jsx)(N.Z, {}),
                              }),
                            }),
                          ],
                        }),
                      (0, r.jsx)(b.Z, {
                        options: H,
                        selectedOption: G,
                        name: "".concat(n, "-product"),
                        onChange: e_,
                        radioButtonClassName: h()("tw-w-full sm:tw-w-[340px]", {
                          "lg:!tw-w-[220px]": !f,
                          "lg:!tw-w-[290px]": f,
                        }),
                      }),
                    ],
                  }),
                  (0, r.jsxs)("div", {
                    className: F().type,
                    children: [
                      "desktop" !== ex &&
                        (0, r.jsx)("p", {
                          className: F().subtitle,
                          children: "Type",
                        }),
                      (0, r.jsx)(b.Z, {
                        options: X,
                        selectedOption: Q,
                        name: "".concat(n, "-type"),
                        onChange: (e) => {
                          J(e),
                            ep({ ...Y(eo, "Forward" === G ? "Forward" : e) }),
                            g.Z.track("Option type selected", { type: e });
                        },
                        radioButtonClassName: "tw-w-full sm:tw-w-[175px]",
                      }),
                    ],
                  }),
                  (0, r.jsxs)("div", {
                    className: F().side,
                    children: [
                      "desktop" !== ex &&
                        (0, r.jsx)("p", {
                          className: F().subtitle,
                          children: "Side",
                        }),
                      (0, r.jsx)(b.Z, {
                        options: [
                          { option: (0, r.jsx)(_.Z, {}), value: "BUY" },
                          { option: (0, r.jsx)(v.Z, {}), value: "SELL" },
                        ],
                        selectedOption: $,
                        name: "".concat(n, "-buy-sell"),
                        orientation: "vertical",
                        onChange: (e) => ee(e),
                      }),
                    ],
                  }),
                  !f &&
                    (0, r.jsxs)("div", {
                      className: F().expiry,
                      children: [
                        "desktop" !== ex &&
                          (0, r.jsx)("p", {
                            className: F().subtitle,
                            children: "Expiry",
                          }),
                        (0, r.jsx)(k.Z, {
                          className: "tw-w-min lg:tw-w-[105px]",
                          value: { name: (0, y.lV)(eo), value: eo },
                          options: W,
                          onChange: (e) => eS(e),
                        }),
                      ],
                    }),
                  (0, r.jsxs)("div", {
                    className: F().size,
                    children: [
                      "desktop" !== ex &&
                        (0, r.jsx)("p", {
                          className: F().subtitle,
                          children: "Size",
                        }),
                      (0, r.jsx)(j.Z, {
                        max: O.Kz,
                        canLink: !0,
                        isLinked: p,
                        onLink: (e) => {
                          l(e);
                        },
                        increment: (e) =>
                          et &&
                          eb(
                            ("UP" === e
                              ? Number(et) + 1
                              : Number(et) - 1
                            ).toString()
                          ),
                        className: h()("tw-w-full lg:tw-w-[110px]", {
                          "lg:tw-w-[125px]": f,
                        }),
                        type: "number",
                        value: et,
                        icon:
                          "digital-option" === G
                            ? (0, r.jsx)(w.Z, {})
                            : (0, I.XX)(z),
                        onChange: (e) => {
                          let { target: t } = e;
                          return eb(t.value);
                        },
                      }),
                    ],
                  }),
                  (0, r.jsxs)("div", {
                    className: F().strike,
                    children: [
                      "Forward" !== G &&
                        "desktop" !== ex &&
                        (0, r.jsx)("p", {
                          className: F().subtitle,
                          children: "Strike",
                        }),
                      "Forward" !== G
                        ? (0, r.jsx)(k.Z, {
                            value: ea ? { name: ea, value: ea } : void 0,
                            options: Object.keys(ed).map((e) => ({
                              name: e,
                              value: e,
                            })),
                            iconEnd: (0, r.jsx)(w.Z, {}),
                            onChange: (e) => ek(e),
                            className: "tw-w-full lg:tw-min-w-24",
                          })
                        : (0, r.jsx)("div", { className: "tw-w-[100px]" }),
                    ],
                  }),
                  (0, r.jsxs)("div", {
                    className: "".concat(
                      "Forward" === G ? F().unitPriceForwards : F().unitPrice
                    ),
                    children: [
                      "desktop" !== ex &&
                        (0, r.jsx)("p", {
                          className: F().subtitle,
                          children: "Unit Price",
                        }),
                      (0, r.jsx)(j.Z, {
                        isLoading: ef,
                        type: "number",
                        value: eu,
                        icon: (0, r.jsx)(w.Z, {}),
                        footerText: "option" !== G || ef ? void 0 : ew,
                        onChange: (e) => {
                          let { target: t } = e;
                          eC((0, C.Dg)(t.value));
                        },
                        onBlur: () => {
                          eC(Number(eu).toFixed(2));
                        },
                        onKeyDown: (e) => {
                          let { key: t } = e;
                          "Enter" == t && eC(Number(eu).toFixed(2));
                        },
                        className: "tw-w-full",
                      }),
                    ],
                  }),
                  "desktop" === ex &&
                    (0, r.jsx)("div", {
                      className: h()(F().action, { "tw-translate-x-1/2": f }),
                      children: (0, r.jsx)(S.Z, {
                        title: "Click to remove row",
                        variant: "icon",
                        onClick: o,
                        children: (0, r.jsx)(N.Z, {}),
                      }),
                    }),
                ],
              }),
            }),
          });
        };
      },
      55205: function (e, t, i) {
        "use strict";
        var r = i(85893),
          a = i(99981),
          s = i.n(a),
          n = i(15922);
        t.Z = (e) => {
          let { leftPanel: t, rightPanel: i, orderSummary: a } = e,
            o = (0, n.F)();
          return (0, r.jsxs)("div", {
            className: s().container,
            children: [
              (0, r.jsxs)("div", {
                className: s().leftPanel,
                children: [
                  t,
                  "desktop" !== o &&
                    (0, r.jsx)("div", {
                      className: s().rightPanel,
                      children: i,
                    }),
                  "desktop" === o &&
                    (0, r.jsx)("div", {
                      className: s().orderSummary,
                      children: a,
                    }),
                  "desktop" !== o &&
                    (0, r.jsx)("div", {
                      className: s().orderSummary,
                      children: a,
                    }),
                ],
              }),
              "desktop" === o &&
                (0, r.jsx)("div", { className: s().rightPanel, children: i }),
            ],
          });
        };
      },
      24760: function (e, t, i) {
        "use strict";
        var r = i(85893),
          a = i(67294),
          s = i(39332),
          n = i(59731),
          o = i(57153),
          l = i(15418),
          c = i(55975),
          d = i(24514),
          p = i(56267);
        t.Z = () => {
          let e = (0, s.usePathname)().split("/"),
            { tradingPageTab: t, setTradingPageTab: i } = (0, n.xc)();
          return (
            (0, a.useEffect)(() => {
              t !== e[2] && i(e[2]);
            }, []),
            (0, r.jsxs)(d.Z, {
              direction: "row-space-between",
              children: [
                (0, r.jsx)(c.Z, {
                  tabs: o.rV,
                  className: "mb-0",
                  activeTab: t,
                  onChange: (e) => {
                    i(e),
                      l.Z.track("Trading menu interactions", {
                        path: "trading/".concat(e),
                      });
                  },
                }),
                (0, r.jsx)(p.Z, {}),
              ],
            })
          );
        };
      },
      61442: function (e, t, i) {
        "use strict";
        i.r(t);
        var r = i(85893);
        i(67294);
        var a = i(59731),
          s = i(27888),
          n = i(65440);
        t.default = (e) => {
          let { children: t } = e,
            { isLoading: i, ithacaSDK: o } = (0, a.qr)();
          return !i && o
            ? t
            : (0, r.jsx)(s.Z, { children: (0, r.jsx)(n.Z, { type: "lg" }) });
        };
      },
      93494: function (e, t, i) {
        "use strict";
        i.r(t);
        var r = i(85893),
          a = i(5716),
          s = i(3575),
          n = i.n(s),
          o = i(37422),
          l = i(21050),
          c = i(41232),
          d = i(92478),
          p = i(93967),
          u = i.n(p),
          C = i(1371),
          m = i(29545);
        let g = (e) => {
          let { handleOnChange: t, title: i, options: s } = e,
            { refs: c, floatingStyles: p } = (0, C.YF)({
              whileElementsMounted: m.Me,
              placement: "bottom-end",
              transform: !1,
              middleware: [(0, C.cv)(12), (0, C.RR)(), (0, C.uY)()],
            });
          return (0, r.jsx)(d.Ri, {
            onChange: t,
            ref: c.setReference,
            children: (0, r.jsxs)("div", {
              className: "tw-relative",
              children: [
                (0, r.jsxs)(d.Y4, {
                  size: "sm",
                  as: o.Z,
                  title: "Click to add Linear Combination",
                  variant: "secondary",
                  children: [(0, r.jsx)(a.Z, {}), i, (0, r.jsx)(l.Z, {})],
                }),
                (0, r.jsx)(d.O_, {
                  transition: !0,
                  className: u()(
                    "tw-absolute tw-z-10 tw-mt-2 tw-w-full tw-overflow-auto tw-rounded-lg tw-bg-background-dark",
                    n().options
                  ),
                  ref: c.setFloating,
                  style: { ...p },
                  children: s.map((e) =>
                    (0, r.jsx)(
                      d.wt,
                      {
                        as: "li",
                        value: e.key,
                        className: n().textSmall,
                        children: e.label,
                      },
                      e.key
                    )
                  ),
                }),
              ],
            }),
          });
        };
        t.default = (e) => {
          let {
            isExpiryLinked: t,
            loadLinearCombination: i,
            loadStructuredProduct: s,
            addPosition: n,
          } = e;
          return (0, r.jsxs)(r.Fragment, {
            children: [
              (0, r.jsxs)(o.Z, {
                title: "Click to add Builing Block ",
                size: "sm",
                variant: "secondary",
                onClick: n,
                children: [(0, r.jsx)(a.Z, {}), " Building Block"],
              }),
              !t &&
                (0, r.jsxs)(r.Fragment, {
                  children: [
                    (0, r.jsx)(g, {
                      handleOnChange: i,
                      title: "Linear Combination",
                      options: c.r,
                    }),
                    (0, r.jsx)(g, {
                      handleOnChange: s,
                      title: "Structured Product",
                      options: c.I,
                    }),
                  ],
                }),
            ],
          });
        };
      },
      78835: function (e, t, i) {
        "use strict";
        i.r(t),
          i.d(t, {
            default: function () {
              return $;
            },
          });
        var r = i(85893),
          a = i(67294),
          s = i(23279),
          n = i.n(s),
          o = i(93967),
          l = i.n(o),
          c = i(26961),
          d = i(55638),
          p = i(24514),
          u = i(27888),
          C = i(47236),
          m = i(15418),
          g = i(92505),
          x = i(5716),
          y = i(61442),
          f = i(108),
          h = i(15922),
          w = i(39332),
          v = i(37422),
          _ = i(72696),
          j = i(55205),
          b = i(43417),
          k = i(85292),
          S = i(69776),
          N = i(18666),
          L = () =>
            (0, r.jsxs)("svg", {
              width: "287",
              height: "249",
              viewBox: "0 0 425 249",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: [
                (0, r.jsxs)("g", {
                  opacity: "0.2",
                  children: [
                    (0, r.jsx)("path", {
                      d: "M236.875 34.7158L236.875 124.716",
                      stroke: "url(#paint0_linear_2297_214879)",
                      strokeWidth: "0.969934",
                    }),
                    (0, r.jsxs)("g", {
                      filter: "url(#filter0_d_2297_214879)",
                      children: [
                        (0, r.jsx)("path", {
                          d: "M245.288 76.564C245.458 76.9723 245.294 78.5185 244.392 78.877C243.49 79.2354 242.338 78.877 242.338 78.877L240.247 74.6948L236.633 78.3088V61.9863L247.704 73.0574H243.579C243.781 73.4455 245.071 76.0454 245.288 76.564Z",
                          fill: "white",
                        }),
                        (0, r.jsx)("path", {
                          fillRule: "evenodd",
                          clipRule: "evenodd",
                          d: "M237.602 64.3281V75.9673L240.511 73.0575L242.936 77.9072C242.936 77.9072 243.592 78.1165 243.906 77.9072C244.22 77.6979 244.532 77.2763 244.391 76.9373C243.724 75.3365 241.966 72.0876 241.966 72.0876H245.361L237.602 64.3281Z",
                          fill: "black",
                        }),
                      ],
                    }),
                    (0, r.jsx)("path", {
                      d: "M425 126.911L0 126.911",
                      stroke: "white",
                      strokeOpacity: "0.3",
                      strokeWidth: "0.5",
                    }),
                    (0, r.jsx)("path", {
                      d: "M228.258 19.5206V27.8408H227.207V20.8334L225.087 21.6063V20.6572L228.093 19.5206H228.258ZM236.698 19.5661V20.1571L233.271 27.8408H232.163L235.584 20.4299H231.106V19.5661H236.698ZM239.227 23.9024L238.386 23.6864L238.801 19.5661H243.046V20.5379H239.693L239.443 22.7885C239.594 22.7013 239.786 22.6198 240.017 22.5441C240.252 22.4683 240.521 22.4304 240.824 22.4304C241.206 22.4304 241.549 22.4967 241.852 22.6293C242.156 22.7581 242.413 22.9438 242.625 23.1863C242.841 23.4288 243.006 23.7205 243.12 24.0615C243.233 24.4025 243.29 24.7833 243.29 25.2038C243.29 25.6016 243.235 25.9673 243.126 26.3007C243.019 26.6341 242.858 26.9258 242.642 27.1759C242.426 27.4222 242.154 27.6135 241.824 27.7499C241.498 27.8863 241.114 27.9545 240.67 27.9545C240.337 27.9545 240.021 27.909 239.721 27.8181C239.426 27.7234 239.161 27.5813 238.926 27.3918C238.694 27.1986 238.505 26.9599 238.357 26.6758C238.213 26.3878 238.122 26.0506 238.084 25.6642H239.085C239.13 25.9748 239.221 26.2363 239.358 26.4484C239.494 26.6606 239.672 26.8216 239.892 26.9315C240.115 27.0376 240.375 27.0906 240.67 27.0906C240.92 27.0906 241.142 27.0471 241.335 26.9599C241.529 26.8728 241.691 26.7478 241.824 26.5848C241.957 26.4219 242.057 26.2249 242.125 25.9938C242.197 25.7627 242.233 25.5031 242.233 25.2152C242.233 24.9538 242.197 24.7113 242.125 24.4877C242.053 24.2642 241.945 24.0691 241.801 23.9024C241.661 23.7357 241.489 23.6068 241.284 23.5159C241.08 23.4212 240.845 23.3738 240.579 23.3738C240.227 23.3738 239.96 23.4212 239.778 23.5159C239.6 23.6106 239.416 23.7394 239.227 23.9024ZM249.792 19.5661V20.1571L246.365 27.8408H245.257L248.678 20.4299H244.2V19.5661H249.792Z",
                      fill: "white",
                    }),
                    (0, r.jsx)("path", {
                      d: "M209.184 7.54977C209.437 7.54977 209.658 7.51744 209.849 7.45277C210.043 7.38811 210.203 7.29758 210.329 7.18119C210.458 7.06157 210.555 6.91769 210.62 6.74957C210.685 6.58145 210.717 6.39393 210.717 6.18701C210.717 5.98332 210.685 5.80065 210.62 5.639C210.558 5.47734 210.465 5.33993 210.339 5.22678C210.212 5.11362 210.052 5.02794 209.858 4.96974C209.668 4.90831 209.443 4.8776 209.184 4.8776H208.147V7.54977H209.184ZM209.184 3.99011C209.64 3.99011 210.035 4.04346 210.368 4.15015C210.704 4.25684 210.98 4.40718 211.197 4.60117C211.417 4.79192 211.58 5.02309 211.687 5.29467C211.793 5.56302 211.847 5.86047 211.847 6.18701C211.847 6.52002 211.79 6.82555 211.677 7.1036C211.564 7.37841 211.396 7.61605 211.173 7.8165C210.95 8.01372 210.672 8.16891 210.339 8.28207C210.009 8.39199 209.624 8.44696 209.184 8.44696H208.147V10.9736H207.012V3.99011H209.184ZM213.637 6.94356C213.792 6.62995 213.98 6.38423 214.2 6.20641C214.419 6.02535 214.683 5.93483 214.99 5.93483C215.097 5.93483 215.197 5.94776 215.291 5.97362C215.384 5.99626 215.469 6.03182 215.543 6.08032L215.47 6.86596C215.457 6.92093 215.436 6.95972 215.407 6.98236C215.381 7.00175 215.346 7.01145 215.3 7.01145C215.252 7.01145 215.182 7.00337 215.092 6.98721C215.001 6.96781 214.906 6.95811 214.806 6.95811C214.66 6.95811 214.531 6.97912 214.418 7.02115C214.308 7.06318 214.208 7.12461 214.117 7.20544C214.03 7.28627 213.952 7.38488 213.884 7.50127C213.816 7.61766 213.753 7.75022 213.695 7.89894V10.9736H212.652V6.02697H213.259C213.369 6.02697 213.445 6.04799 213.487 6.09002C213.529 6.12881 213.558 6.19833 213.574 6.29855L213.637 6.94356ZM217.319 6.02697V10.9736H216.277V6.02697H217.319ZM217.494 4.53327C217.494 4.62703 217.474 4.71594 217.436 4.8C217.4 4.88407 217.35 4.95843 217.285 5.02309C217.221 5.08452 217.145 5.13463 217.057 5.17343C216.973 5.20899 216.883 5.22678 216.786 5.22678C216.692 5.22678 216.603 5.20899 216.519 5.17343C216.438 5.13463 216.367 5.08452 216.306 5.02309C216.244 4.95843 216.194 4.88407 216.155 4.8C216.12 4.71594 216.102 4.62703 216.102 4.53327C216.102 4.43628 216.12 4.34575 216.155 4.26169C216.194 4.17763 216.244 4.10489 216.306 4.04346C216.367 3.97879 216.438 3.92868 216.519 3.89312C216.603 3.85432 216.692 3.83492 216.786 3.83492C216.883 3.83492 216.973 3.85432 217.057 3.89312C217.145 3.92868 217.221 3.97879 217.285 4.04346C217.35 4.10489 217.4 4.17763 217.436 4.26169C217.474 4.34575 217.494 4.43628 217.494 4.53327ZM222.126 6.9969C222.094 7.03893 222.063 7.07127 222.034 7.0939C222.005 7.11653 221.963 7.12785 221.908 7.12785C221.853 7.12785 221.795 7.10845 221.733 7.06965C221.675 7.03085 221.604 6.98882 221.52 6.94356C221.439 6.89506 221.34 6.85141 221.224 6.81262C221.107 6.77382 220.962 6.75442 220.787 6.75442C220.561 6.75442 220.362 6.79483 220.191 6.87566C220.023 6.95649 219.881 7.07288 219.764 7.22484C219.651 7.37356 219.565 7.55623 219.507 7.77285C219.452 7.98624 219.425 8.2271 219.425 8.49545C219.425 8.7735 219.455 9.02083 219.517 9.23745C219.578 9.45407 219.666 9.63674 219.779 9.78546C219.895 9.93419 220.034 10.0473 220.196 10.1249C220.361 10.2025 220.545 10.2413 220.749 10.2413C220.949 10.2413 221.112 10.2171 221.238 10.1686C221.365 10.1201 221.47 10.0667 221.554 10.0085C221.638 9.95035 221.709 9.89701 221.767 9.84851C221.828 9.80001 221.893 9.77576 221.961 9.77576C222.045 9.77576 222.11 9.8081 222.155 9.87276L222.451 10.2559C222.331 10.4014 222.199 10.5242 222.053 10.6245C221.908 10.7247 221.754 10.8071 221.592 10.8718C221.431 10.9332 221.263 10.9769 221.088 11.0027C220.914 11.0318 220.737 11.0464 220.559 11.0464C220.252 11.0464 219.965 10.9898 219.696 10.8766C219.431 10.7602 219.198 10.5937 218.998 10.3771C218.801 10.1573 218.644 9.89054 218.527 9.57693C218.414 9.26008 218.358 8.89959 218.358 8.49545C218.358 8.13011 218.409 7.79225 218.513 7.48187C218.616 7.16826 218.767 6.89829 218.964 6.67198C219.164 6.44566 219.412 6.26945 219.706 6.14336C220 6.01404 220.34 5.94938 220.724 5.94938C221.083 5.94938 221.398 6.00757 221.67 6.12396C221.945 6.24036 222.189 6.40524 222.402 6.61863L222.126 6.9969ZM226.449 7.94259C226.449 7.768 226.423 7.60635 226.371 7.45762C226.323 7.30567 226.25 7.17473 226.153 7.0648C226.056 6.95164 225.935 6.86435 225.789 6.80292C225.647 6.73826 225.482 6.70592 225.295 6.70592C224.916 6.70592 224.619 6.81423 224.402 7.03085C224.186 7.24747 224.048 7.55138 223.99 7.94259H226.449ZM223.961 8.58275C223.974 8.86403 224.017 9.10813 224.092 9.31505C224.166 9.51873 224.265 9.68847 224.388 9.82426C224.514 9.96005 224.662 10.0619 224.834 10.1298C225.008 10.1945 225.202 10.2268 225.416 10.2268C225.619 10.2268 225.796 10.2042 225.944 10.1589C226.093 10.1104 226.222 10.0587 226.332 10.0037C226.442 9.9455 226.536 9.89377 226.614 9.84851C226.691 9.80001 226.762 9.77576 226.827 9.77576C226.911 9.77576 226.976 9.8081 227.021 9.87276L227.317 10.2559C227.194 10.4014 227.055 10.5242 226.9 10.6245C226.745 10.7247 226.58 10.8071 226.405 10.8718C226.23 10.9332 226.051 10.9769 225.867 11.0027C225.682 11.0318 225.503 11.0464 225.328 11.0464C224.986 11.0464 224.667 10.9898 224.373 10.8766C224.082 10.7602 223.828 10.5905 223.612 10.3674C223.398 10.1443 223.23 9.86791 223.107 9.53813C222.988 9.20835 222.928 8.82846 222.928 8.39846C222.928 8.05575 222.981 7.73567 223.088 7.43822C223.198 7.14078 223.353 6.88213 223.553 6.66228C223.757 6.44243 224.003 6.26945 224.291 6.14336C224.582 6.01404 224.91 5.94938 225.275 5.94938C225.579 5.94938 225.86 5.99949 226.119 6.09972C226.378 6.19671 226.601 6.34058 226.788 6.53134C226.976 6.72209 227.121 6.95649 227.225 7.23454C227.331 7.50935 227.385 7.82296 227.385 8.17537C227.385 8.33703 227.367 8.44534 227.331 8.5003C227.296 8.55526 227.231 8.58275 227.137 8.58275H223.961ZM233.416 8.81068C233.044 8.82361 232.73 8.85433 232.475 8.90282C232.219 8.94809 232.012 9.0079 231.854 9.08226C231.695 9.15339 231.581 9.23907 231.51 9.33929C231.442 9.43952 231.408 9.54945 231.408 9.66907C231.408 9.78546 231.426 9.88569 231.461 9.96975C231.5 10.0506 231.552 10.1185 231.616 10.1734C231.684 10.2252 231.762 10.264 231.849 10.2898C231.94 10.3125 232.038 10.3238 232.145 10.3238C232.416 10.3238 232.649 10.2737 232.843 10.1734C233.04 10.07 233.231 9.92125 233.416 9.72727V8.81068ZM230.651 6.71562C231.211 6.19509 231.877 5.93483 232.649 5.93483C232.934 5.93483 233.186 5.98171 233.406 6.07547C233.629 6.16599 233.815 6.29532 233.964 6.46344C234.115 6.63156 234.23 6.83202 234.308 7.0648C234.389 7.29435 234.429 7.54977 234.429 7.83105V10.9736H233.964C233.863 10.9736 233.787 10.9591 233.736 10.93C233.684 10.8977 233.64 10.8346 233.605 10.7408L233.503 10.3383C233.377 10.4515 233.252 10.5533 233.129 10.6439C233.007 10.7311 232.879 10.8055 232.746 10.8669C232.617 10.9284 232.476 10.9736 232.324 11.0027C232.176 11.0351 232.011 11.0512 231.83 11.0512C231.629 11.0512 231.442 11.0237 231.267 10.9688C231.096 10.9138 230.947 10.8314 230.821 10.7215C230.695 10.6083 230.595 10.4693 230.52 10.3044C230.449 10.1395 230.414 9.9455 230.414 9.72242C230.414 9.53166 230.464 9.34576 230.564 9.16471C230.667 8.98365 230.835 8.822 231.068 8.67974C231.304 8.53425 231.613 8.41462 231.995 8.32086C232.379 8.2271 232.853 8.17376 233.416 8.16082V7.83105C233.416 7.47541 233.34 7.21029 233.188 7.0357C233.036 6.86111 232.813 6.77382 232.518 6.77382C232.318 6.77382 232.15 6.79968 232.014 6.85141C231.878 6.89991 231.76 6.95326 231.66 7.01145C231.56 7.06965 231.471 7.12461 231.393 7.17634C231.316 7.22484 231.233 7.24909 231.146 7.24909C231.075 7.24909 231.013 7.23131 230.962 7.19574C230.913 7.15694 230.873 7.11006 230.84 7.0551L230.651 6.71562ZM237.17 11.0512C236.759 11.0512 236.443 10.9365 236.22 10.7069C236 10.4741 235.89 10.1476 235.89 9.72727V6.84656H235.347C235.288 6.84656 235.238 6.82878 235.196 6.79322C235.154 6.75442 235.133 6.69784 235.133 6.62348V6.20156L235.933 6.08517L236.161 4.65451C236.177 4.59955 236.205 4.5559 236.244 4.52357C236.283 4.48801 236.334 4.47023 236.399 4.47023H236.932V6.09487H238.305V6.84656H236.932V9.65452C236.932 9.83234 236.976 9.96813 237.063 10.0619C237.151 10.1557 237.267 10.2025 237.413 10.2025C237.493 10.2025 237.563 10.1928 237.621 10.1734C237.679 10.1508 237.729 10.1282 237.771 10.1055C237.813 10.0797 237.849 10.057 237.878 10.0376C237.91 10.015 237.941 10.0037 237.97 10.0037C238.028 10.0037 238.075 10.036 238.111 10.1007L238.421 10.6099C238.26 10.7522 238.069 10.8621 237.849 10.9397C237.629 11.014 237.403 11.0512 237.17 11.0512ZM246.096 10.057L246.091 10.9736H241.736V3.99011H246.091V4.9067H242.876V7.01145H245.446V7.89894H242.876V10.057H246.096ZM251.379 10.9736H250.38C250.299 10.9736 250.234 10.9526 250.186 10.9106C250.141 10.8686 250.103 10.8217 250.074 10.7699L248.935 8.94162C248.906 9.05155 248.867 9.14692 248.818 9.22775L247.785 10.7699C247.75 10.8217 247.709 10.8686 247.664 10.9106C247.622 10.9526 247.565 10.9736 247.494 10.9736H246.563L248.275 8.42271L246.631 6.02697H247.63C247.711 6.02697 247.769 6.0399 247.805 6.06577C247.843 6.0884 247.877 6.12396 247.907 6.17246L249.027 7.91834C249.056 7.81165 249.101 7.70981 249.163 7.61281L250.108 6.19186C250.173 6.08193 250.255 6.02697 250.356 6.02697H251.311L249.667 8.37906L251.379 10.9736ZM253.127 9.73212C253.273 9.91964 253.431 10.0522 253.602 10.1298C253.777 10.2042 253.969 10.2413 254.18 10.2413C254.587 10.2413 254.904 10.0926 255.13 9.79516C255.36 9.49772 255.474 9.05478 255.474 8.46635C255.474 8.16244 255.449 7.90379 255.397 7.69041C255.345 7.47379 255.271 7.29758 255.174 7.16179C255.077 7.026 254.959 6.92739 254.82 6.86596C254.681 6.80453 254.524 6.77382 254.349 6.77382C254.084 6.77382 253.855 6.83202 253.661 6.94841C253.47 7.06157 253.292 7.22484 253.127 7.43822V9.73212ZM253.074 6.74472C253.281 6.50224 253.515 6.30664 253.777 6.15791C254.042 6.00919 254.349 5.93483 254.698 5.93483C254.976 5.93483 255.229 5.99141 255.455 6.10457C255.681 6.21449 255.875 6.37615 256.037 6.58953C256.199 6.80292 256.323 7.06803 256.41 7.38488C256.501 7.69849 256.546 8.05898 256.546 8.46635C256.546 8.8317 256.496 9.17279 256.396 9.48963C256.299 9.80325 256.158 10.0764 255.974 10.3092C255.79 10.5388 255.567 10.7198 255.305 10.8524C255.043 10.9817 254.747 11.0464 254.417 11.0464C254.126 11.0464 253.879 10.9995 253.675 10.9057C253.475 10.812 253.292 10.6827 253.127 10.5178V12.6177H252.084V6.02697H252.715C252.857 6.02697 252.948 6.09325 252.986 6.22581L253.074 6.74472ZM258.646 6.02697V10.9736H257.603V6.02697H258.646ZM258.82 4.53327C258.82 4.62703 258.801 4.71594 258.762 4.8C258.726 4.88407 258.676 4.95843 258.612 5.02309C258.547 5.08452 258.471 5.13463 258.384 5.17343C258.3 5.20899 258.209 5.22678 258.112 5.22678C258.018 5.22678 257.929 5.20899 257.845 5.17343C257.765 5.13463 257.693 5.08452 257.632 5.02309C257.571 4.95843 257.52 4.88407 257.482 4.8C257.446 4.71594 257.428 4.62703 257.428 4.53327C257.428 4.43628 257.446 4.34575 257.482 4.26169C257.52 4.17763 257.571 4.10489 257.632 4.04346C257.693 3.97879 257.765 3.92868 257.845 3.89312C257.929 3.85432 258.018 3.83492 258.112 3.83492C258.209 3.83492 258.3 3.85432 258.384 3.89312C258.471 3.92868 258.547 3.97879 258.612 4.04346C258.676 4.10489 258.726 4.17763 258.762 4.26169C258.801 4.34575 258.82 4.43628 258.82 4.53327ZM260.94 6.94356C261.095 6.62995 261.283 6.38423 261.503 6.20641C261.723 6.02535 261.986 5.93483 262.293 5.93483C262.4 5.93483 262.5 5.94776 262.594 5.97362C262.688 5.99626 262.772 6.03182 262.846 6.08032L262.773 6.86596C262.76 6.92093 262.739 6.95972 262.71 6.98236C262.684 7.00175 262.649 7.01145 262.604 7.01145C262.555 7.01145 262.486 7.00337 262.395 6.98721C262.305 6.96781 262.209 6.95811 262.109 6.95811C261.963 6.95811 261.834 6.97912 261.721 7.02115C261.611 7.06318 261.511 7.12461 261.42 7.20544C261.333 7.28627 261.255 7.38488 261.188 7.50127C261.12 7.61766 261.057 7.75022 260.998 7.89894V10.9736H259.956V6.02697H260.562C260.672 6.02697 260.748 6.04799 260.79 6.09002C260.832 6.12881 260.861 6.19833 260.877 6.29855L260.94 6.94356ZM267.925 6.02697L265.2 12.38C265.164 12.4544 265.12 12.5126 265.069 12.5546C265.02 12.5967 264.944 12.6177 264.841 12.6177H264.07L264.981 10.639L262.964 6.02697H263.871C263.958 6.02697 264.024 6.04799 264.07 6.09002C264.118 6.12881 264.154 6.17569 264.176 6.23066L265.355 9.03861C265.384 9.11944 265.41 9.20027 265.432 9.2811C265.458 9.35869 265.482 9.43952 265.505 9.52358C265.531 9.43952 265.557 9.35708 265.583 9.27625C265.609 9.19542 265.638 9.11459 265.67 9.03377L266.8 6.23066C266.823 6.17246 266.86 6.12396 266.911 6.08517C266.966 6.04637 267.026 6.02697 267.091 6.02697H267.925Z",
                      fill: "white",
                      fillOpacity: "0.6",
                    }),
                  ],
                }),
                (0, r.jsxs)("g", {
                  opacity: "0.2",
                  children: [
                    (0, r.jsx)("rect", {
                      x: "186",
                      y: "226.716",
                      width: "53.1882",
                      height: "22",
                      rx: "11",
                      fill: "#35333E",
                    }),
                    (0, r.jsx)("circle", {
                      cx: "197.638",
                      cy: "237.716",
                      r: "3.87973",
                      fill: "white",
                    }),
                    (0, r.jsx)("path", {
                      d: "M211.326 234.118V235.096H208.548V242.716H207.384V235.096H204.594V234.118H211.326ZM213.574 236.542C214.018 236.542 214.418 236.616 214.774 236.764C215.134 236.912 215.438 237.122 215.686 237.394C215.938 237.666 216.13 237.996 216.262 238.384C216.398 238.768 216.466 239.198 216.466 239.674C216.466 240.154 216.398 240.586 216.262 240.97C216.13 241.354 215.938 241.682 215.686 241.954C215.438 242.226 215.134 242.436 214.774 242.584C214.418 242.728 214.018 242.8 213.574 242.8C213.13 242.8 212.728 242.728 212.368 242.584C212.012 242.436 211.708 242.226 211.456 241.954C211.204 241.682 211.01 241.354 210.874 240.97C210.738 240.586 210.67 240.154 210.67 239.674C210.67 239.198 210.738 238.768 210.874 238.384C211.01 237.996 211.204 237.666 211.456 237.394C211.708 237.122 212.012 236.912 212.368 236.764C212.728 236.616 213.13 236.542 213.574 236.542ZM213.574 241.966C214.174 241.966 214.622 241.766 214.918 241.366C215.214 240.962 215.362 240.4 215.362 239.68C215.362 238.956 215.214 238.392 214.918 237.988C214.622 237.584 214.174 237.382 213.574 237.382C213.27 237.382 213.006 237.434 212.782 237.538C212.558 237.642 212.37 237.792 212.218 237.988C212.07 238.184 211.958 238.426 211.882 238.714C211.81 238.998 211.774 239.32 211.774 239.68C211.774 240.04 211.81 240.362 211.882 240.646C211.958 240.93 212.07 241.17 212.218 241.366C212.37 241.558 212.558 241.706 212.782 241.81C213.006 241.914 213.27 241.966 213.574 241.966ZM219.624 242.812C219.144 242.812 218.774 242.678 218.514 242.41C218.258 242.142 218.13 241.756 218.13 241.252V237.532H217.398C217.334 237.532 217.28 237.514 217.236 237.478C217.192 237.438 217.17 237.378 217.17 237.298V236.872L218.166 236.746L218.412 234.868C218.42 234.808 218.446 234.76 218.49 234.724C218.534 234.684 218.59 234.664 218.658 234.664H219.198V236.758H220.938V237.532H219.198V241.18C219.198 241.436 219.26 241.626 219.384 241.75C219.508 241.874 219.668 241.936 219.864 241.936C219.976 241.936 220.072 241.922 220.152 241.894C220.236 241.862 220.308 241.828 220.368 241.792C220.428 241.756 220.478 241.724 220.518 241.696C220.562 241.664 220.6 241.648 220.632 241.648C220.688 241.648 220.738 241.682 220.782 241.75L221.094 242.26C220.91 242.432 220.688 242.568 220.428 242.668C220.168 242.764 219.9 242.812 219.624 242.812ZM226.723 242.716H226.249C226.145 242.716 226.061 242.7 225.997 242.668C225.933 242.636 225.891 242.568 225.871 242.464L225.751 241.9C225.591 242.044 225.435 242.174 225.283 242.29C225.131 242.402 224.971 242.498 224.803 242.578C224.635 242.654 224.455 242.712 224.263 242.752C224.075 242.792 223.865 242.812 223.633 242.812C223.397 242.812 223.175 242.78 222.967 242.716C222.763 242.648 222.585 242.548 222.433 242.416C222.281 242.284 222.159 242.118 222.067 241.918C221.979 241.714 221.935 241.474 221.935 241.198C221.935 240.958 222.001 240.728 222.133 240.508C222.265 240.284 222.477 240.086 222.769 239.914C223.065 239.742 223.451 239.602 223.927 239.494C224.403 239.382 224.985 239.318 225.673 239.302V238.828C225.673 238.356 225.571 238 225.367 237.76C225.167 237.516 224.869 237.394 224.473 237.394C224.213 237.394 223.993 237.428 223.813 237.496C223.637 237.56 223.483 237.634 223.351 237.718C223.223 237.798 223.111 237.872 223.015 237.94C222.923 238.004 222.831 238.036 222.739 238.036C222.667 238.036 222.603 238.018 222.547 237.982C222.495 237.942 222.453 237.894 222.421 237.838L222.229 237.496C222.565 237.172 222.927 236.93 223.315 236.77C223.703 236.61 224.133 236.53 224.605 236.53C224.945 236.53 225.247 236.586 225.511 236.698C225.775 236.81 225.997 236.966 226.177 237.166C226.357 237.366 226.493 237.608 226.585 237.892C226.677 238.176 226.723 238.488 226.723 238.828V242.716ZM223.951 242.062C224.139 242.062 224.311 242.044 224.467 242.008C224.623 241.968 224.769 241.914 224.905 241.846C225.045 241.774 225.177 241.688 225.301 241.588C225.429 241.488 225.553 241.374 225.673 241.246V239.98C225.181 239.996 224.763 240.036 224.419 240.1C224.075 240.16 223.795 240.24 223.579 240.34C223.363 240.44 223.205 240.558 223.105 240.694C223.009 240.83 222.961 240.982 222.961 241.15C222.961 241.31 222.987 241.448 223.039 241.564C223.091 241.68 223.161 241.776 223.249 241.852C223.337 241.924 223.441 241.978 223.561 242.014C223.681 242.046 223.811 242.062 223.951 242.062ZM229.529 233.878V242.716H228.461V233.878H229.529Z",
                      fill: "white",
                    }),
                  ],
                }),
                (0, r.jsxs)("defs", {
                  children: [
                    (0, r.jsxs)("filter", {
                      id: "filter0_d_2297_214879",
                      x: "234.887",
                      y: "61.2104",
                      width: "14.5621",
                      height: "20.5416",
                      filterUnits: "userSpaceOnUse",
                      colorInterpolationFilters: "sRGB",
                      children: [
                        (0, r.jsx)("feFlood", {
                          floodOpacity: "0",
                          result: "BackgroundImageFix",
                        }),
                        (0, r.jsx)("feColorMatrix", {
                          in: "SourceAlpha",
                          type: "matrix",
                          values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
                          result: "hardAlpha",
                        }),
                        (0, r.jsx)("feOffset", { dy: "0.969934" }),
                        (0, r.jsx)("feGaussianBlur", {
                          stdDeviation: "0.87294",
                        }),
                        (0, r.jsx)("feColorMatrix", {
                          type: "matrix",
                          values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.65 0",
                        }),
                        (0, r.jsx)("feBlend", {
                          mode: "normal",
                          in2: "BackgroundImageFix",
                          result: "effect1_dropShadow_2297_214879",
                        }),
                        (0, r.jsx)("feBlend", {
                          mode: "normal",
                          in: "SourceGraphic",
                          in2: "effect1_dropShadow_2297_214879",
                          result: "shape",
                        }),
                      ],
                    }),
                    (0, r.jsxs)("linearGradient", {
                      id: "paint0_linear_2297_214879",
                      x1: "237.375",
                      y1: "34.7158",
                      x2: "237.375",
                      y2: "124.716",
                      gradientUnits: "userSpaceOnUse",
                      children: [
                        (0, r.jsx)("stop", { stopColor: "white" }),
                        (0, r.jsx)("stop", {
                          offset: "1",
                          stopColor: "white",
                          stopOpacity: "0",
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          Z = i(9305),
          P = i(75922),
          F = i(28801),
          V = i(52431),
          H = i(55986),
          E = i(24760),
          M = i(24620),
          O = i(59731),
          I = i(18182),
          z = i(46574),
          D = i(67930),
          B = i(64088),
          T = i(41232),
          R = i(93494),
          U = i(10873),
          Y = i.n(U),
          W = i(98315),
          A = i(13279),
          G = i(59421),
          q = i(45338),
          X = i(97053),
          K = i(88144);
        let Q = (e) => [
            {
              name: "Product",
              style: l()(Y().product, { "[&>p]:!tw-w-[220px]": !e }),
            },
            { name: "Type", style: l()(Y().type, "tw-text-center") },
            { name: "Side", style: l()(Y().side, "tw-text-center") },
            {
              name: "Expiry",
              style: l()(Y().expiry, "tw-text-center", { "tw-hidden": e }),
            },
            {
              name: "Size",
              style: l()(Y().size, "tw-text-center", {
                "[&>p]:!tw-w-[128px]": e,
              }),
            },
            {
              name: "Strike",
              style: l()(Y().strike, "tw-text-center", {
                "[&>p]:!tw-w-[108px]": e,
              }),
            },
            { name: "Unit Price", style: Y().unitPrice },
          ],
          J = (e) => {
            let t = [];
            for (let i = e - 500; i <= e + 500; i += 100) t.push(i);
            return t;
          };
        var $ = () => {
          var e;
          let [t, i] = (0, a.useState)(),
            [s, o] = (0, a.useState)(),
            [U, $] = (0, a.useState)(!1),
            ee = (0, w.useSearchParams)(),
            [et, ei] = (0, a.useState)(""),
            [er, ea] = (0, a.useState)(D.hc.GoodTillCancel),
            {
              detectAndSetQuickPricerTab: es,
              dynamicOptionStrategies: en,
              setDynamicOptionStrategies: eo,
              setDynamicOptionStrategiesParams: el,
              dynamicOptionStrategiesParams: { invertSide: ec },
              showAuctionModal: ed,
            } = (0, O.xc)(),
            ep = el("invertSide"),
            {
              currentSpotPrice: eu,
              expiryList: eC,
              ithacaSDK: em,
              currencyPrecision: eg,
              setCurrentExpiryDate: ex,
              currentExpiryDate: ey,
              getContractsByExpiry: ef,
            } = (0, O.qr)(),
            { showOrderErrorToast: eh } = (0, C.Z)(),
            [ew, ev] = (0, a.useState)(),
            [e_, ej] = (0, a.useState)(() =>
              en.strategies.every((e) => e.linked) ? "right" : "left"
            ),
            [eb, ek] = (0, a.useState)("left"),
            eS = eC.findIndex((e) => e === ey),
            [eN, eL] = (0, a.useState)(
              null !== (e = eC[eS + 1]) && void 0 !== e ? e : ey
            ),
            eZ = (0, W.Zj)(eu),
            [eP, eF] = (0, a.useState)("".concat(eZ)),
            eV = (0, h.F)(),
            eH = "left" === eb,
            eE = Array.from(
              new Set(
                en.strategies.filter((e) => !!e.expiry).map((e) => e.expiry)
              )
            ).sort(),
            eM = Q(eH),
            eO = J(eZ),
            [eI, ez] = (0, a.useState)(eE[0]),
            eD = eE.length > 2,
            eB = eE.length > 1 && eI !== eE[0],
            { showOrderConfirmationToastAndRefetchData: eT } = (0, G.F)();
          (0, a.useEffect)(() => {
            var e;
            let t = eC.findIndex((e) => e === ey);
            eL(null !== (e = eC[t + 1]) && void 0 !== e ? e : ey);
          }, [ey]),
            (0, a.useEffect)(() => {
              (null == eE ? void 0 : eE.length) > 1 &&
                !eE.includes(eN.toString()) &&
                eE[1] &&
                eL(Number(eE[1]));
            }, [eE]);
          let eR = () => {
            let e = en.strategies.map((e) => ({ ...e, expiry: ey.toString() }));
            eo({ ...en, strategies: e });
          };
          (0, a.useEffect)(() => {
            eH && eR();
          }, [eH, ey]),
            (0, a.useEffect)(() => {
              eE.includes(eI) || ez(eE[0]);
            }, [eE, eI]);
          let eU = (0, a.useMemo)(
              () =>
                en.strategies.reduce((e, t) => {
                  var i;
                  let r = "BUY" === t.side ? 1 : -1;
                  return (
                    e +
                    (null !== (i = t.calcServerFinalPrice) && void 0 !== i
                      ? i
                      : 0) *
                      t.size *
                      r
                  );
                }, 0),
              [en]
            ),
            { data: eY = [] } = (0, X.B)({
              contractsData: en.strategies
                .filter((e) => e.expiry)
                .map((e) => ({
                  contractId: e.contractId,
                  expiry: e.expiry,
                  payoff: e.payoff,
                  strike: e.strike,
                })),
            }),
            eW = (0, a.useMemo)(
              () =>
                en.strategies.reduce((e, t) => {
                  var i;
                  let r =
                    (null ===
                      (i = eY.find((e) => e.contractId === t.contractId)) ||
                    void 0 === i
                      ? void 0
                      : i.price) || 0;
                  return t.side === d.V.SELL
                    ? e - (r * t.size || 0)
                    : e + (r * t.size || 0);
                }, 0),
              [eY, en.strategies]
            );
          (0, a.useEffect)(() => {
            let e = ee.get(D.lb),
              t = ee.get(D.lL),
              i = ee.get(D.my),
              r = T.r.find((e) => e.key === i),
              a = T.I.find((e) => e.key === i),
              s = ey;
            if (t) {
              let e = parseInt(t, 10);
              !isNaN(e) && eC.includes(e)
                ? ((s = e), ex(e))
                : console.error("Invalid expiry date in URL");
            }
            if ((T.I.find((e) => e.key === i), e))
              try {
                let t = (0, c.decompressFromEncodedURIComponent)(e),
                  i = JSON.parse(t),
                  n = i.map((e) => {
                    var t;
                    return {
                      contractId: 0,
                      referencePrice: 0,
                      strikeIndex: 0,
                      ...e,
                      strike: "".concat(e.strike),
                      expiry:
                        null !== (t = e.expiry) && void 0 !== t
                          ? t
                          : s.toString(),
                    };
                  }),
                  o = Array.from(new Set(i.map((e) => e.expiry)));
                (o.length > 1 || Number(null == o ? void 0 : o[0]) !== s) &&
                  ek("right"),
                  eo({
                    label:
                      (null == r ? void 0 : r.label) ||
                      (null == a ? void 0 : a.label) ||
                      "-",
                    key:
                      (null == r ? void 0 : r.key) ||
                      (null == a ? void 0 : a.key) ||
                      "-",
                    strategies: n,
                  }),
                  "reload" === window.performance.getEntries()[0].type
                    ? ea(D.hc.GoodTillCancel)
                    : ea(D.hc.ImmediateOrCancel);
              } catch (e) {
                console.error("Error parsing strategies from URL:", e),
                  eo(T.r[0]);
              }
          }, [ee]);
          let eA = async () => {
              let e = en.strategies.map((e) => ({
                  contractId: e.contractId,
                  quantity: "".concat(e.size),
                  side: e.side,
                })),
                t = en.strategies.map((e) => ({
                  contractId: e.contractId,
                  quantity: "".concat(e.size),
                  side: e.side,
                  expiry: e.expiry,
                })),
                i = en.strategies.map((e) => e.referencePrice),
                r = (0, B.calculateNetPrice)(e, i, eg.strike),
                a = {
                  clientOrderId: (0, B.createClientOrderId)(),
                  totalNetPrice: r,
                  legs: e,
                  timeInForce: er,
                };
              try {
                let [e, i] = await Promise.all([
                    em.calculation.estimateOrderLockPositioned(a),
                    em.calculation.estimateOrderFeesExtended(a),
                  ]),
                  r = eK(en),
                  s = (0, q.uM)(Math.abs(r), "string", "USDC");
                return {
                  orderSummary: {
                    order: { ...a, legs: t },
                    orderLock: e,
                    orderFees: i.estimation,
                    orderFeesLocked: i.toBeLocked,
                  },
                  comboPrice: s,
                };
              } catch (i) {
                let e = {
                  orderSummary: {
                    order: { ...a, legs: t },
                    orderLock: null,
                    orderFees: null,
                    orderFeesLocked: null,
                  },
                  comboPrice: et,
                };
                return (
                  console.warn(
                    "Order estimation for position builder failed",
                    i
                  ),
                  e
                );
              }
            },
            { data: eG } = (0, K.a)({
              queryKey: ["orderSummary", en.strategies, er],
              queryFn: () => eA(),
              staleTime: 3e4,
              gcTime: 3e4,
              retry: !1,
            });
          (0, a.useEffect)(() => {
            eG && (i(eG.orderSummary), ei(eG.comboPrice)), eJ(en);
          }, [eG, en]),
            (0, a.useEffect)(() => {
              let e = en.strategies.map((e) => {
                  var t;
                  return {
                    linked: e.linked,
                    payoff: e.payoff,
                    product: e.product,
                    size: e.size,
                    side: e.side,
                    strike: e.strike,
                    expiry:
                      null !== (t = e.expiry) && void 0 !== t
                        ? t
                        : ey.toString(),
                  };
                }),
                t = (0, c.compressToEncodedURIComponent)(JSON.stringify(e)),
                i = new URLSearchParams(ee);
              "-" !== en.key ? i.set(D.my, en.key) : i.delete(D.my),
                i.set(D.lL, "".concat(ey)),
                i.set(D.lb, t),
                window.history.replaceState(null, "", "?".concat(i.toString()));
            }, [en.strategies]);
          let { portfolioGeeks: eq } = (0, S.f)({
              positionsData: en.strategies.map((e) => {
                let t = (0, N.cK)(
                  (null == e ? void 0 : e.expiry) || ey,
                  N.Nn
                ).format("YYYY-MM-DD");
                return {
                  strike: Number(e.strike) || 0,
                  contractId: e.contractId,
                  expiry: t,
                  payoff: (0, A.e)(e.payoff, e.product),
                  position: Number(e.size),
                  side: e.side,
                };
              }),
            }),
            eX = (e, t) => {
              let r = (t === D.nG.Linear ? T.r : T.I).find((t) => t.key === e);
              if (!r) {
                console.error("Strategy not found");
                return;
              }
              i(void 0),
                ei(""),
                o(void 0),
                r.strategies.every((e) => e.linked) ? ej("right") : ej("left"),
                ep("BUY"),
                eo({ ...{ ...en, key: "" } }),
                setTimeout(() => {
                  eo({
                    label: null == r ? void 0 : r.label,
                    key: null == r ? void 0 : r.key,
                    strategies: r ? [...r.strategies] : [],
                  });
                }, 100);
            },
            eK = (e) =>
              Math.abs(
                e.strategies.reduce(
                  (e, t) =>
                    e +
                    t.referencePrice * t.size * ("SELL" === t.side ? -1 : 1),
                  0
                )
              ),
            eQ = (e, t, i, r) => {
              e.length || o(void 0);
              let a = e.map((e) => ({
                  contractId: e.contractId,
                  quantity: "".concat(e.size),
                  side: e.side,
                })),
                s = e.map((e) => e.referencePrice),
                n = e.map((e) =>
                  "Forward" === e.product ? "Forward" : e.payoff
                ),
                l = ey.toString(),
                c = e.map((e) =>
                  e.expiry && eC.includes(Number(e.expiry)) ? e.expiry : l
                ),
                d = e
                  .map((e) => e.strike)
                  .filter(
                    (e, t) => Object.keys(ef(c[t], n[t])).includes(e) && !!e
                  );
              if (e.length !== d.length) {
                console.warn("Wrong legs configuration");
                return;
              }
              if (a.length) {
                let e = d.map((e, t) => ({
                  ...ef(c[t], n[t])[e],
                  ...a[t],
                  premium: s[t],
                }));
                if (e.length)
                  try {
                    let a = em.calculation;
                    return (0, I.s)(
                      e,
                      i,
                      void 0,
                      (null == eE ? void 0 : eE.length) > 1 && !t,
                      t ? 0 : (null == eC ? void 0 : eC[0]) || 0,
                      a,
                      r,
                      eE
                    );
                  } catch (e) {
                    console.warn("Error calculating chart data", e);
                  }
              }
            };
          (0, a.useEffect)(() => {
            if (!eB) {
              o(eQ(en.strategies, eB));
              return;
            }
            let e = en.strategies.filter(
                (e) => Number(e.expiry) === Number(eE[0])
              ),
              t = en.strategies.filter((e) => Number(e.expiry) === Number(eI)),
              i = { min: Number(eP) - 500, max: Number(eP) + 500 },
              r = eQ(e, eB, i),
              a = null == r ? void 0 : r.find((e) => e.x === Number(eP));
            o(eQ(t, eB, i, null == a ? void 0 : a.total));
          }, [en.strategies, eI, eP, eB]);
          let eJ = (e) => {
              e.strategies.length &&
                es(e.strategies[e.strategies.length - 1].payoff);
            },
            e$ = (e, t) => {
              let i = en.strategies[t].size;
              (en.strategies[t].expiry !== e.expiry ||
                en.strategies[t].payoff !== e.payoff ||
                en.strategies[t].product !== e.product ||
                en.strategies[t].side !== e.side ||
                en.strategies[t].strike !== e.strike) &&
                ea(D.hc.GoodTillCancel);
              let r =
                  en.strategies[t].payoff !== e.payoff ||
                  en.strategies[t].product !== e.product,
                a = {
                  key: r ? "-" : en.key,
                  label: r ? "-" : en.label,
                  strategies: en.strategies,
                };
              if (
                ((a.strategies[t] = e), a.strategies.every((e) => e.linked))
              ) {
                let t = e.size;
                (a.strategies = a.strategies.map((e) => ({ ...e, size: t }))),
                  eo(a);
                return;
              }
              if ("option" === e.product) {
                let r = e.size;
                a.strategies = a.strategies.map((e, a) =>
                  "digital-option" === e.product && t === a
                    ? { ...e, size: (e.size / i) * r }
                    : "option" === e.product && t === a
                    ? { ...e, size: r }
                    : e
                );
              } else if ("digital-option" === e.product) {
                let t = e.size;
                a.strategies = a.strategies.map((e) =>
                  "digital-option" === e.product ? { ...e, size: t } : e
                );
              } else if ("Forward" === e.product) {
                let t = e.size;
                a.strategies = a.strategies.map((e) =>
                  "Forward" === e.product ? { ...e, size: t } : e
                );
              }
              eo(a);
            },
            e2 = (e) => {
              let t = en.strategies.map((e) => ({
                ...e,
                side: "BUY" === e.side ? "SELL" : "BUY",
              }));
              ep(e), eo({ ...en, strategies: [...t] });
            },
            e1 = (e, t) => {
              e
                ? en.strategies.filter((e) => e.linked).length + 1 ===
                    en.strategies.length && ej("right")
                : ej("left"),
                (en.strategies[t].linked = e),
                eo({ ...en });
            },
            e4 = (e) => {
              eo({
                key: "-",
                label: "-",
                strategies: en.strategies.filter((t, i) => i !== e),
              }),
                m.Z.track("Close position");
            },
            e6 = () => {
              i(void 0),
                o(void 0),
                ei(""),
                eo({ key: "-", label: "-", strategies: [] });
            },
            e3 = (e) => {
              ek(e);
            },
            e0 = async (e, t) => {
              try {
                let i = e.legs.map((e) => ({
                  contractId: e.contractId,
                  quantity: e.quantity,
                  side: e.side,
                }));
                await em.orders.newOrder({ ...e, legs: i }, t), eT();
              } catch (e) {
                eh(null == e ? void 0 : e.message),
                  console.log("Failed to submit order", e);
              }
            },
            e7 = (e) => {
              let t = Math.max(...en.strategies.map((e) => e.size)),
                i = en.strategies.map((i) => {
                  let r = "right" === e;
                  return { ...i, linked: r, size: r ? t : i.size };
                });
              ej(e), eo({ ...en, strategies: i });
            },
            e5 = () =>
              en.strategies.map((e, t) => ({
                leg: {
                  contractId: e.contractId,
                  quantity: "".concat(e.size),
                  side: e.side,
                  expiry: e.expiry,
                },
                referencePrice: e.referencePrice,
                payoff: e.payoff,
                strike: e.strike,
              })),
            e9 = (0, a.useCallback)(
              n()(
                (e) => {
                  if (!t || !Number(e)) return;
                  let i = eK(en),
                    r = Number(e) / i;
                  eo({
                    ...en,
                    strategies: en.strategies.map((e) => ({
                      ...e,
                      referencePrice: Number((e.referencePrice * r).toFixed(2)),
                    })),
                  });
                },
                1e3,
                { trailing: !0 }
              ),
              [t, en]
            ),
            e8 = (e) => {
              if (e === D.nG.Linear) {
                let e = T.r.find((e) => e.key === en.key);
                if (e) return { name: e.label, value: e.key };
              }
              if (e === D.nG.Structured) {
                let e = T.I.find((e) => e.key === en.key);
                if (e) return { name: e.label, value: e.key };
              }
              return { name: "-", value: "" };
            };
          return (0, r.jsxs)(r.Fragment, {
            children: [
              (0, r.jsx)(g.Z, {}),
              (0, r.jsx)(u.Z, {
                children: (0, r.jsx)(k.Z, {
                  children: (0, r.jsxs)(y.default, {
                    children: [
                      (0, r.jsx)(E.Z, {}),
                      (0, r.jsx)(j.Z, {
                        leftPanel: (0, r.jsxs)(r.Fragment, {
                          children: [
                            (0, r.jsx)(b.F, {
                              expiryDropdownErrorMessage:
                                "right" === eb
                                  ? "Expiry Date selector is disabled when Enable Calendars toggle is activated."
                                  : void 0,
                              hideHours: !0,
                              onExpiryChange: () => {
                                i(void 0), ei(""), o(void 0);
                              },
                            }),
                            "desktop" !== eV
                              ? (0, r.jsxs)("div", {
                                  className: Y().moduleHeader,
                                  children: [
                                    (0, r.jsx)("h3", {
                                      className: "mb-0 mt-20",
                                      children: "Dynamic Option Strategies",
                                    }),
                                    (0, r.jsxs)(p.Z, {
                                      direction: "column",
                                      gap: "gap-8",
                                      classes: Y().controlsWrapper,
                                      children: [
                                        (0, r.jsx)(_.Z, {
                                          defaultState: eb,
                                          size: "sm",
                                          rightLabel: "Enable calendars",
                                          onChange: e3,
                                        }),
                                        (0, r.jsx)(_.Z, {
                                          defaultState: e_,
                                          size: "sm",
                                          rightLabel: "Link all",
                                          rightLabelClass: "link-icon",
                                          onChange: e7,
                                        }),
                                        (0, r.jsxs)(p.Z, {
                                          gap: "gap-8",
                                          direction: "row-space-between",
                                          classes: "mt-10",
                                          children: [
                                            (0, r.jsx)(P.Z, {
                                              options: [
                                                {
                                                  option: (0, r.jsx)(x.Z, {}),
                                                  value: "BUY",
                                                },
                                                {
                                                  option: (0, r.jsx)(f.Z, {}),
                                                  value: "SELL",
                                                },
                                              ],
                                              size: "vertical-compact",
                                              width: 24,
                                              selectedOption: ec,
                                              name: "invert-side",
                                              orientation: "vertical",
                                              onChange: (e) => e2(e),
                                            }),
                                            (0, r.jsx)("span", {
                                              className: "color-white fs-xs",
                                              children: "Invert Side",
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                  ],
                                })
                              : (0, r.jsx)("h3", {
                                  className: "mt-20",
                                  children: "Dynamic Option Strategies",
                                }),
                            (0, r.jsx)("div", {
                              className: "mb-24",
                              children: (0, r.jsxs)(p.Z, {
                                direction: "row-space-between",
                                children: [
                                  (0, r.jsxs)(p.Z, {
                                    gap: "tw-gap-4",
                                    children: [
                                      (0, r.jsxs)("div", {
                                        className: Y().prePackagedContainer,
                                        children: [
                                          (0, r.jsx)("div", {
                                            className: Y().prePackagedTitle,
                                            children: "Linear Combinations",
                                          }),
                                          (0, r.jsx)("div", {
                                            className: Y().dropDownWrapper,
                                            children: (0, r.jsx)(V.Z, {
                                              width: 145,
                                              size: "sm",
                                              value: e8(D.nG.Linear),
                                              options: T.r.map((e) => ({
                                                name: e.label,
                                                value: e.key,
                                              })),
                                              onChange: (e) =>
                                                eX(e, D.nG.Linear),
                                            }),
                                          }),
                                        ],
                                      }),
                                      (0, r.jsxs)("div", {
                                        className: Y().prePackagedContainer,
                                        children: [
                                          (0, r.jsx)("div", {
                                            className: Y().prePackagedTitle,
                                            children: "Structured Products",
                                          }),
                                          (0, r.jsx)("div", {
                                            className: Y().dropDownWrapper,
                                            children: (0, r.jsx)(V.Z, {
                                              width: 145,
                                              size: "sm",
                                              value: e8(D.nG.Structured),
                                              options: T.I.map((e) => ({
                                                name: e.label,
                                                value: e.key,
                                              })),
                                              onChange: (e) =>
                                                eX(e, D.nG.Structured),
                                            }),
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  "desktop" === eV &&
                                    (0, r.jsxs)(p.Z, {
                                      gap: "gap-12",
                                      children: [
                                        (0, r.jsx)(_.Z, {
                                          defaultState: eb,
                                          size: "sm",
                                          rightLabel: "Enable Calendars",
                                          onChange: e3,
                                        }),
                                        (0, r.jsx)(_.Z, {
                                          defaultState: e_,
                                          size: "sm",
                                          rightLabel: "Link all",
                                          rightLabelClass: "link-icon",
                                          onChange: e7,
                                        }),
                                        (0, r.jsxs)(p.Z, {
                                          gap: "gap-8",
                                          direction: "row-space-between",
                                          children: [
                                            (0, r.jsx)(P.Z, {
                                              options: [
                                                {
                                                  option: (0, r.jsx)(x.Z, {}),
                                                  value: "BUY",
                                                },
                                                {
                                                  option: (0, r.jsx)(f.Z, {}),
                                                  value: "SELL",
                                                },
                                              ],
                                              size: "vertical-compact",
                                              width: 24,
                                              selectedOption: ec,
                                              name: "invert-side",
                                              orientation: "vertical",
                                              onChange: (e) => e2(e),
                                            }),
                                            (0, r.jsx)("span", {
                                              className: "color-white fs-xs",
                                              children: "Invert Side",
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                ],
                              }),
                            }),
                            (0, r.jsxs)("div", {
                              className: Y().strategiesWrapper,
                              children: [
                                en.strategies.length
                                  ? (0, r.jsxs)(r.Fragment, {
                                      children: [
                                        (0, r.jsx)("div", {
                                          className: Y().parent,
                                          children:
                                            "desktop" === eV &&
                                            (0, r.jsxs)(r.Fragment, {
                                              children: [
                                                eM.map((e, t) =>
                                                  (0, r.jsx)(
                                                    "div",
                                                    {
                                                      className: e.style,
                                                      children: (0, r.jsx)(
                                                        "p",
                                                        { children: e.name }
                                                      ),
                                                    },
                                                    t
                                                  )
                                                ),
                                                (0, r.jsx)("div", {
                                                  className: Y().action,
                                                }),
                                              ],
                                            }),
                                        }),
                                        en.strategies.map((e, t) =>
                                          (0, r.jsx)(
                                            z.Z,
                                            {
                                              id: "strategy-"
                                                .concat(t, "-")
                                                .concat(en.key, "-")
                                                .concat(ey, "-")
                                                .concat(e.strike, "-")
                                                .concat(e.product),
                                              strategy: e,
                                              linked: e.linked,
                                              linkChange: (e) => e1(e, t),
                                              updateStrategy: (e) => e$(e, t),
                                              removeStrategy: () => e4(t),
                                              netPrice: eU,
                                              isExpiryLinked: eH,
                                              limitedExpiries: eE.map((e) =>
                                                Number(e)
                                              ),
                                            },
                                            "strategy-"
                                              .concat(t, "-")
                                              .concat(en.key, "-")
                                              .concat(ey, "-")
                                              .concat(e.strike, "-")
                                              .concat(e.product)
                                          )
                                        ),
                                      ],
                                    })
                                  : (0, r.jsx)("div", {
                                      className: Y().strategiesPlaceholder,
                                    }),
                                (0, r.jsxs)("div", {
                                  className:
                                    "tw-mb-4 tw-flex tw-flex-row tw-flex-wrap tw-items-start tw-justify-start tw-gap-2 lg:tw-justify-between",
                                  children: [
                                    (0, r.jsxs)("div", {
                                      className:
                                        "verticalScrollBar tw-flex tw-flex-wrap tw-gap-2.5",
                                      children: [
                                        !eH &&
                                          (0, r.jsx)("div", {
                                            children: (0, r.jsx)(V.Z, {
                                              value: {
                                                name: (0, N.lV)(eN.toString()),
                                                value: eN.toString(),
                                              },
                                              options: eC
                                                .filter(
                                                  (e) =>
                                                    eE.length <= 1 ||
                                                    eE.includes(e.toString())
                                                )
                                                .map((e) => ({
                                                  name: (0, N.lV)(e.toString()),
                                                  value: e.toString(),
                                                })),
                                              onChange: (e) => {
                                                eL(Number(e));
                                              },
                                              className:
                                                "tw-w-full lg:tw-min-w-24",
                                            }),
                                          }),
                                        (0, r.jsx)(R.default, {
                                          isExpiryLinked: eH,
                                          loadLinearCombination: (e) => {
                                            var t, i;
                                            let r =
                                              null !==
                                                (i =
                                                  null ===
                                                    (t = T.r.find(
                                                      (t) => t.key === e
                                                    )) || void 0 === t
                                                    ? void 0
                                                    : t.strategies) &&
                                              void 0 !== i
                                                ? i
                                                : [];
                                            eo({
                                              ...{
                                                ...en,
                                                strategies: [
                                                  ...en.strategies,
                                                  ...r.map((e) => ({
                                                    ...e,
                                                    side:
                                                      e.side === d.V.BUY
                                                        ? d.V.SELL
                                                        : d.V.BUY,
                                                    expiry: eN.toString(),
                                                  })),
                                                ],
                                              },
                                            });
                                          },
                                          loadStructuredProduct: (e) => {
                                            var t, i;
                                            let r =
                                              null !==
                                                (i =
                                                  null ===
                                                    (t = T.I.find(
                                                      (t) => t.key === e
                                                    )) || void 0 === t
                                                    ? void 0
                                                    : t.strategies) &&
                                              void 0 !== i
                                                ? i
                                                : [];
                                            eo({
                                              ...{
                                                ...en,
                                                strategies: [
                                                  ...en.strategies,
                                                  ...r.map((e) => ({
                                                    ...e,
                                                    side:
                                                      e.side === d.V.BUY
                                                        ? d.V.SELL
                                                        : d.V.BUY,
                                                    expiry: eN.toString(),
                                                  })),
                                                ],
                                              },
                                            });
                                          },
                                          addPosition: () => {
                                            let e = 1;
                                            en.strategies.length &&
                                              (e = Math.max(
                                                ...en.strategies.map(
                                                  (e) => e.size
                                                )
                                              )),
                                              ej("left"),
                                              eo({
                                                key: "-",
                                                label: "-",
                                                strategies: [
                                                  ...en.strategies,
                                                  {
                                                    product: "option",
                                                    payoff: "Call",
                                                    side: d.V.BUY,
                                                    size: e,
                                                    strikeIndex: 0,
                                                    strike: "",
                                                    contractId: 0,
                                                    referencePrice: 0,
                                                    linked: !1,
                                                    expiry: eH
                                                      ? ey.toString()
                                                      : eN.toString(),
                                                  },
                                                ],
                                              });
                                          },
                                        }),
                                      ],
                                    }),
                                    en.strategies.length > 0 &&
                                      (0, r.jsx)(v.Z, {
                                        className: l()(Y().clearAll, "tw-mt-0"),
                                        title: "Click to clear all",
                                        onClick: e6,
                                        variant: "clear",
                                        children: "Clear All",
                                      }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        orderSummary: (0, r.jsxs)(r.Fragment, {
                          children: [
                            (0, r.jsx)(H.Z, {
                              error: eD
                                ? "You can only select up to 2 different expiration dates"
                                : void 0,
                              orderSummary: t,
                              submitAuction: () => {
                                t &&
                                  (ed
                                    ? ($(!0),
                                      ev({
                                        order: null == t ? void 0 : t.order,
                                        type:
                                          "-" === en.key
                                            ? "Position Builder"
                                            : en.label,
                                      }))
                                    : e0(
                                        t.order,
                                        "-" === en.key
                                          ? "Position Builder"
                                          : en.label
                                      ));
                              },
                              comboPrice: et,
                              setComboPrice: (e) => {
                                ei(e), e9(e);
                              },
                              modelPrice: eW,
                            }),
                            (0, r.jsx)(F.Z, {
                              isOpen: U,
                              closeModal: (e) => $(e),
                              submitOrder: () => {
                                ew &&
                                  (e0(ew.order, ew.type), ev(void 0), $(!1));
                              },
                              auctionSubmission: ew,
                              positionBuilderStrategies: e5(),
                              orderSummary: t,
                            }),
                          ],
                        }),
                        rightPanel: (0, r.jsxs)(r.Fragment, {
                          children: [
                            (0, r.jsx)("h3", {
                              className: "mb-13",
                              children: "Strategy",
                            }),
                            (0, r.jsx)(M.Z, {
                              strategies: e5(),
                              removeRow: (e) => {
                                e4(e);
                              },
                              clearAll: e6,
                            }),
                            s
                              ? (0, r.jsx)(r.Fragment, {
                                  children: (0, r.jsx)(Z.Z, {
                                    subTitle: eB
                                      ? (0, r.jsx)("div", {
                                          children: (0, r.jsx)("p", {
                                            className:
                                              "tw-mt-2 tw-font-roboto tw-text-xs tw-text-ithaca-white-60",
                                            children:
                                              "* Reference Underlying Settlement Price at 1st Expiry",
                                          }),
                                        })
                                      : (0, r.jsx)(r.Fragment, {}),
                                    additionalContent:
                                      eE.length > 1
                                        ? (0, r.jsxs)("div", {
                                            className: "tw-flex tw-gap-1",
                                            children: [
                                              (0, r.jsx)(V.Z, {
                                                labelClassName: "!tw-text-xxs",
                                                label: "Expiry",
                                                size: "sm",
                                                width: 70,
                                                inputClassName:
                                                  "!tw-p-2 !tw-h-[22px]",
                                                value: {
                                                  name: (0, N.lV)(
                                                    eI.toString()
                                                  ),
                                                  value: eI.toString(),
                                                },
                                                options: eE.map((e) => ({
                                                  name: (0, N.lV)(e),
                                                  value: e,
                                                })),
                                                onChange: (e) => ez(e),
                                                className: "!tw-w-min-auto",
                                              }),
                                              eB
                                                ? (0, r.jsx)(V.Z, {
                                                    labelClassName:
                                                      "!tw-text-xxs",
                                                    label: "*Price Ref",
                                                    size: "sm",
                                                    width: 70,
                                                    inputClassName:
                                                      "!tw-min-w-auto !tw-p-2 !tw-h-[22px]",
                                                    value: {
                                                      name: eP.toString(),
                                                      value: eP.toString(),
                                                    },
                                                    options: eO.map((e) => ({
                                                      name: "".concat(e),
                                                      value: "".concat(e),
                                                    })),
                                                    onChange: (e) => eF(e),
                                                    className:
                                                      "!tw-w-min-auto ",
                                                  })
                                                : (0, r.jsx)(r.Fragment, {}),
                                            ],
                                          })
                                        : (0, r.jsx)(r.Fragment, {}),
                                    greeks: eq,
                                    chartData: s,
                                    height: 210,
                                    id: "dynamic-chart",
                                    showMultipleExpiries: eE.length > 1,
                                  }),
                                })
                              : (0, r.jsxs)(r.Fragment, {
                                  children: [
                                    (0, r.jsx)("h3", {
                                      children: "Payoff Diagram",
                                    }),
                                    (0, r.jsx)("div", {
                                      className: Y().tableWrapper,
                                      children: (0, r.jsx)(L, {}),
                                    }),
                                  ],
                                }),
                          ],
                        }),
                      }),
                    ],
                  }),
                }),
              }),
            ],
          });
        };
      },
      97053: function (e, t, i) {
        "use strict";
        i.d(t, {
          B: function () {
            return o;
          },
        });
        var r = i(69881),
          a = i(59731),
          s = i(18666),
          n = i(88144);
        let o = (e) => {
          let { contractsData: t } = e,
            { underlyingCurrency: i } = (0, a.qr)(),
            o =
              (null == t
                ? void 0
                : t.map((e) => ({
                    contractId: e.contractId,
                    payoff: e.payoff,
                    expiry: (0, s.p6)(e.expiry.toString(), s.Nn, "YYYY-MM-DD"),
                    strike: Number(e.strike),
                  }))) || [];
          return (0, n.a)({
            queryKey: ["priceList", o],
            queryFn: () => (0, r.Cu)({ contracts: o, currency: i }),
            select: (e) => e.data,
          });
        };
      },
      10694: function (e) {
        e.exports = {
          parent: "DynamicOptionRow_parent__Tf7L9",
          title: "DynamicOptionRow_title__9sALT",
          type: "DynamicOptionRow_type__sH9Ul",
          side: "DynamicOptionRow_side__e0IPY",
          expiry: "DynamicOptionRow_expiry__1L1Qm",
          size: "DynamicOptionRow_size__dW9HC",
          strike: "DynamicOptionRow_strike__ivrb8",
          unitPrice: "DynamicOptionRow_unitPrice__mk6ni",
          unitPriceForwards: "DynamicOptionRow_unitPriceForwards__bUcZb",
          premium: "DynamicOptionRow_premium__Wbc42",
          iv: "DynamicOptionRow_iv__YuPPG",
          action: "DynamicOptionRow_action__QuD8e",
          removeButton: "DynamicOptionRow_removeButton__UqgPX",
          subtitle: "DynamicOptionRow_subtitle__lEdLx",
          subtitle__side: "DynamicOptionRow_subtitle__side__Fk1OX",
        };
      },
      99981: function (e) {
        e.exports = {
          container: "Sidebar_container__oM3MX",
          leftPanel: "Sidebar_leftPanel__FDW7K",
          rightPanel: "Sidebar_rightPanel__hThTO",
          orderSummary: "Sidebar_orderSummary___ulbZ",
        };
      },
      10873: function (e) {
        e.exports = {
          title: "dynamic-option-strategies_title__nPHEb",
          positionTitle: "dynamic-option-strategies_positionTitle__jjetP",
          positionBuilder: "dynamic-option-strategies_positionBuilder__fKmt3",
          summary: "dynamic-option-strategies_summary__RUST9",
          strategyPanel: "dynamic-option-strategies_strategyPanel__Qj4wu",
          strategyWrapper: "dynamic-option-strategies_strategyWrapper__rA8FD",
          summaryWrapper: "dynamic-option-strategies_summaryWrapper__ugtLc",
          tableWrapper: "dynamic-option-strategies_tableWrapper__vQXlk",
          containerWrapper: "dynamic-option-strategies_containerWrapper__CJLBd",
          dropDownWrapper: "dynamic-option-strategies_dropDownWrapper__QyNnZ",
          prePackagedContainer:
            "dynamic-option-strategies_prePackagedContainer__FdYik",
          prePackagedTitle: "dynamic-option-strategies_prePackagedTitle__91fTz",
          parent: "dynamic-option-strategies_parent__0WGLz",
          product: "dynamic-option-strategies_product__FM_ZA",
          type: "dynamic-option-strategies_type__FFfkD",
          side: "dynamic-option-strategies_side__LTvRv",
          size: "dynamic-option-strategies_size__SCPSp",
          strike: "dynamic-option-strategies_strike__xBVOq",
          unitPrice: "dynamic-option-strategies_unitPrice__eGd8Y",
          action: "dynamic-option-strategies_action__XFQ92",
          expiry: "dynamic-option-strategies_expiry__79N61",
          premium: "dynamic-option-strategies_premium__HDYqY",
          clearAll: "dynamic-option-strategies_clearAll__68wtZ",
          buttonWrapper: "dynamic-option-strategies_buttonWrapper__oJVIS",
          strategiesPlaceholder:
            "dynamic-option-strategies_strategiesPlaceholder__1XSlj",
          strategiesWrapper:
            "dynamic-option-strategies_strategiesWrapper__wfAtT",
          moduleHeader: "dynamic-option-strategies_moduleHeader__5DhjY",
          controlsWrapper: "dynamic-option-strategies_controlsWrapper__t6bzn",
        };
      },
      96752: function (e, t, i) {
        "use strict";
        i.d(t, {
          P: function () {
            return p;
          },
        });
        var r = i(67294),
          a = i(38213),
          s = i(83619),
          n = i(22944),
          o = i(18419),
          l = i(65448),
          c = i(14872);
        let d = (0, s.yV)(function (e, t) {
            var i;
            let a = (0, c.B)(),
              { disabled: d = a || !1, autoFocus: p = !1, ...u } = e,
              { isFocusVisible: C, focusProps: m } = (0, n.F)({ autoFocus: p }),
              { isHovered: g, hoverProps: x } = (0, o.X)({ isDisabled: d }),
              { pressed: y, pressProps: f } = (0, l.x)({ disabled: d }),
              h = (0, s.dG)(
                {
                  ref: t,
                  type: null != (i = u.type) ? i : "button",
                  disabled: d || void 0,
                  autoFocus: p,
                },
                m,
                x,
                f
              ),
              w = (0, r.useMemo)(
                () => ({
                  disabled: d,
                  hover: g,
                  focus: C,
                  active: y,
                  autofocus: p,
                }),
                [d, g, C, y, p]
              );
            return (0, s.L6)()({
              ourProps: h,
              theirProps: u,
              slot: w,
              defaultTag: "button",
              name: "Button",
            });
          }),
          p = (0, s.yV)(function (e, t) {
            let i = (0, a.$)();
            return r.createElement(d, {
              ref: t,
              ...(0, s.dG)({ onClick: i }, e),
            });
          });
      },
    },
    function (e) {
      e.O(
        0,
        [
          5128, 6342, 9261, 4442, 5675, 7410, 1371, 9342, 2592, 4782, 6322,
          9773, 9849, 8026, 7461, 52, 7972, 497, 2478, 6100, 579, 8833, 9156,
          8755, 3797, 9816, 2888, 9774, 179,
        ],
        function () {
          return e((e.s = 42755));
        }
      ),
        (_N_E = e.O());
    },
  ]);
